name: main

on:
  pull_request:
  push:

env:
  REGISTRY: quay.io/zncdatadev
  DOCKER_CACHE_DIR: /tmp/docker-cache
  CI_SCRIPT_DEBUG: true
  CONTAINER_TOOL_PROVIDER: buildah

jobs:
  linter_code_base:
    name: Markdown Lint
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Lint Code Base
      uses: github/super-linter@v4
      env:
        VALIDATE_MARKDOWN: true
        VALIDATE_ALL_CODEBASE: false
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LINTER_RULES_PATH: /
        MARKDOWN_CONFIG_FILE: .markdownlint.yml
  
  prepare_updated_product:
    name: Prepare Updated Product
    runs-on: ubuntu-24.04
    outputs:
      BEFORE_COMMIT_SHA: ${{ steps.get_updated_product.outputs.BEFORE_COMMIT_SHA }}
      AFTER_COMMIT_SHA: ${{ steps.get_updated_product.outputs.AFTER_COMMIT_SHA }}
      PRODUCTS: ${{ steps.get_updated_product.outputs.PRODUCTS }}
      INFRA: ${{ steps.get_updated_product.outputs.INFRA }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install jq
      uses: dcarbone/install-jq-action@v2.1.0
    - name: Check version
      run: |
        python3  --version
        jq --version
    - name: Get Updated Product
      id: get_updated_product
      run: |
        set -ex
        BEFORE_COMMIT_SHA=''
        AFTER_COMMIT_SHA=''

        GH_EVENT=${{ github.event_name }}

        if [ $GH_EVENT == 'pull_request' ]; then
          BEFORE_COMMIT_SHA=${{ github.event.pull_request.base.sha }}
          AFTER_COMMIT_SHA=${{ github.event.pull_request.head.sha }}
        elif [ $GH_EVENT == 'push' ]; then
          BEFORE_COMMIT_SHA=${{ github.event.before }}
          AFTER_COMMIT_SHA=${{ github.sha }}

          # check if BEFORE_COMMIT_SHA is valid. eg: 
          #   - push to a new branch, BEFORE_COMMIT_SHA is 0000000000000000000000000000000000000000
          #   - push --amend in main branch, BEFORE_COMMIT_SHA may be invalid
          # Or BEFORE_COMMIT_SHA is not an ancestor of AFTER_COMMIT_SHA
          
          if ! git cat-file -e $BEFORE_COMMIT_SHA >/dev/null 2>&1; then
            BEFORE_COMMIT_SHA=$(git rev-parse "$AFTER_COMMIT_SHA"^)
          fi
        fi

        echo "Save commit sha to env"
        echo "BEFORE_COMMIT_SHA=$BEFORE_COMMIT_SHA" >> $GITHUB_ENV
        echo "AFTER_COMMIT_SHA=$AFTER_COMMIT_SHA" >> $GITHUB_ENV
            
        echo "BEFORE_COMMIT_SHA=$BEFORE_COMMIT_SHA"
        echo "BEFORE_COMMIT_SHA=$BEFORE_COMMIT_SHA" >> "$GITHUB_OUTPUT"
        echo "AFTER_COMMIT_SHA=$AFTER_COMMIT_SHA" >> "$GITHUB_OUTPUT"

        echo "Get target product"
        python3 .github/scripts/get_target_product.py \
          --before-sha $BEFORE_COMMIT_SHA \
          --after-sha $AFTER_COMMIT_SHA

        # check output.json file exists
        if [ ! -f output.json ]; then
          echo "output.json file not found"
          exit 1
        fi

        # should be valid json
        jq . output.json

        # get `products`, `infra` from output.json and set as output
        PRODUCTS=$(jq -c '.products | tostring' output.json)
        INFRA=$(jq -c '.infra | tostring' output.json)
        echo "PRODUCTS: $PRODUCTS, INFRA: $INFRA"
        
        echo "PRODUCTS=$PRODUCTS" >> "$GITHUB_OUTPUT"
        echo "INFRA=$INFRA" >> "$GITHUB_OUTPUT"

  test_infra:
    name: Test Infra
    runs-on: ubuntu-24.04
    needs: 
      - prepare_updated_product
    permissions:
      id-token: write
    steps:
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install jq
      uses: dcarbone/install-jq-action@v2.1.0
    - name: Check version
      run: |
        bash --version
        jq --version
        buildah version
        podman info
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk
    - name: Install buildah
      id: install_buildah
      uses: ./.github/actions/install-buildah
      with:
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: Build Infra
      id: build_infra
      run: |
        set -ex
        INFRA="${{ needs.prepare_updated_product.outputs.INFRA }}"
        echo "INFRA from output: $INFRA"
        
        products=()
        # build infra
        for item in $(echo "${INFRA}" | jq -r '.[]'); do
            products+=($item)
        done

        # save as space separated string to output
        echo "PRODUCTS=${products[*]}" >> "$GITHUB_OUTPUT"
    - name: Build Images
      uses: ./.github/actions/build
      with:
        products: ${{ steps.build_infra.outputs.PRODUCTS }}
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk

  prepare_product_matrix:
    name: Prepare Product Matrix
    runs-on: ubuntu-24.04
    needs: prepare_updated_product
    outputs:
      PRODUCT_MATRIX: ${{ steps.get_product_matrix.outputs.PRODUCT_MATRIX }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install jq
      uses: dcarbone/install-jq-action@v2.1.0
    - name: Check version
      run: |
        jq --version
    - name: Get Product Matrix
      id: get_product_matrix
      run: |
        set -ex
        PRODUCTS="${{ needs.prepare_updated_product.outputs.PRODUCTS }}"
        echo "PRODUCTS from output: $PRODUCTS"

        product_matrix=()
        for item in $(echo "${PRODUCTS}" | jq -r '.[]'); do
          metadata_file="${item}/metadata.json"
          name=$(jq -r '.name' $metadata_file)
            
          for property in $(jq -c '.properties[]' $metadata_file); do
            version=$(echo $property | jq -r '.version')
            product_matrix+=("${name}:${version}")
          done
        done

        # eg: ["product1:1.0.0", "product2:2.0.0"]
        product_matrix_json=$(jq -c -n --arg product_matrix "${product_matrix[*]}" '$product_matrix | split(" ")')

        # save as compact json array to output
        echo "PRODUCT_MATRIX=$product_matrix_json" >> "$GITHUB_OUTPUT"
    
  test_product:
    name: Test Product
    runs-on: ubuntu-24.04
    needs: prepare_product_matrix
    permissions:
      id-token: write
    if: ${{ needs.prepare_product_matrix.outputs.PRODUCT_MATRIX != '[]' }}
    strategy:
      matrix:
        product: ${{ fromJson(needs.prepare_product_matrix.outputs.PRODUCT_MATRIX) }}
    steps:
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install jq
      uses: dcarbone/install-jq-action@v2.1.0
    - name: Check version
      run: |
        bash --version
        jq --version
        buildah version
        podman info
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk
    - name: Install buildah
      uses: ./.github/actions/install-buildah
      with:
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: Build Product
      uses: ./.github/actions/build
      with:
        products: ${{ matrix.product }}
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk

  deploy_infra:
    name: Deploy Infra
    runs-on: ubuntu-24.04
    needs: 
      - prepare_updated_product
      - test_infra
    permissions:
      id-token: write
    if: github.event_name == 'push' && github.repository_owner == 'zncdatadev'
    steps:
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install jq
      uses: dcarbone/install-jq-action@v2.1.0
    - name: Check version
      run: |
        bash --version
        jq --version
        buildah version
        podman info
    - name: Login to quay.io
      uses: redhat-actions/podman-login@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk
    - name: Install buildah
      uses: ./.github/actions/install-buildah
      with:
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: Deploy Infra
      id: deploy_infra
      run: |
        set -ex
        INFRA="${{ needs.prepare_updated_product.outputs.INFRA }}"
        echo "INFRA from output: $INFRA"
        
        products=()

        # deploy infra
        for item in $(echo "${INFRA}" | jq -r '.[]'); do
          products+=($item)
        done

        # save as space separated string to output
        echo "PRODUCTS=${products[*]}" >> "$GITHUB_OUTPUT"
    - name: Build Images
      uses: ./.github/actions/build
      with:
        products: ${{ steps.deploy_infra.outputs.PRODUCTS }}
        push: true
        sign: false
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk

  deploy_product:
    name: Deploy Product
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'push' && github.repository_owner == 'zncdatadev' }}
    needs: 
      - prepare_product_matrix
      - test_product
      - deploy_infra  # already deploy condition
    permissions:
      id-token: write
    strategy:
      matrix:
        product: ${{fromJson(needs.prepare_product_matrix.outputs.PRODUCT_MATRIX)}}
    steps:
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Install jq
      uses: dcarbone/install-jq-action@v2.1.0
    - name: Check version
      run: |
        bash --version
        jq --version
        buildah version
        podman info
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk
    - name: Install buildah
      uses: ./.github/actions/install-buildah
      with:
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: Deploy Product
      uses: ./.github/actions/build
      with:
        products: ${{ matrix.product }}
        push: true
        sign: false
    - name: Show Usage
      run: |
        free -h
        df -h
        lsblk
