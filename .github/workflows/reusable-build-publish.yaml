name: Resuable Build and Publish


on:
  workflow_call:
    inputs:
      registry:
        description: 'The registry to login to'
        required: false
        type: string
        default: 'quay.io/zncdatadev'
      kubedoop_version:
        description: 'The kubedoop version'
        required: false
        type: string
        default: '0.0.0-dev'
      targets:
        description: |
          The targets to build, the name sperated by space. e.g. "name1:version1 name1:version1" or "name1" or "name1, name2"
          If build a tag without version, just use the name. we will build all versions of the container.
        required: true
        type: string
      push:
        description: |
          Push the image to registry after build.
        required: false
        type: boolean
        default: false
      sign:
        description: |
          Sign the image after build.
        required: false
        type: boolean
        default: false


jobs:
  triage:
    runs-on: ubuntu-20.04
    steps:
      - name: Show Usage
        run: |
          free -h
          df -h
          lsblk

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Show version
        run: |
          docker info
      - name: Free Space
        run: |
          echo "::group::Show disk space before"
          echo "INFO: show free space"
          free -h
          df -h
          lsblk
          lscpu

          echo "::endgroup::"


          echo "::group::Free up space"

          echo "INFO: Remove Android SDK"
          sudo rm -rf /usr/local/lib/android || true

          echo "INFO: Remove apt cache"
          sudo apt-get remove -y --fix-missing \
            '^aspnetcore-.*' \
            '^dotnet-.*' \
            '^llvm-.*' \
            'php.*' \
            '^mongodb-.*' \
            '^mysql-.*' \
            azure-cli \
            google-cloud-sdk \
            google-cloud-cli \
            google-chrome-stable \
            firefox \
            powershell \
            mono-devel \
            libgl1-mesa-dri
          sudo apt-get autoremove -y
          sudo apt-get clean -y

          echo "INFO: Remove .NET runtime"
          sudo rm -rf /usr/share/dotnet || true

          echo "INFO: Remove Haskell runtime"
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /usr/local/.ghcup || true

          echo "INFO: Remove Docker images"
          sudo docker image prune --all --force || true

          echo "INFO: Remove Agent tool cache"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true

          echo "INFO: Remove Swap storage"
          sudo swapoff -a || true
          sudo rm -f /mnt/swapfile || true
          free -h

          echo "::endgroup::"


          echo "::group::Show disk space after"
          echo "INFO: show free space"
          free -h
          df -h
          lsblk
          echo "::endgroup::"

      - name: Login to Quay.io
        run: |
          if [ -n "${{ secrets.QUAY_USERNAME }}" ] && [ -n "${{ secrets.QUAY_PASSWORD }}" ]; then
            echo "${{ secrets.QUAY_PASSWORD }}" | docker login -u "${{ secrets.QUAY_USERNAME }}" --password-stdin quay.io
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Publish
        env:
          PUSH: ${{ inputs.push }}
          SIGN: ${{ inputs.sign }}
          REGISTRY: ${{ inputs.registry }}
          TARGETS: ${{ inputs.targets }}
        run: |
          cmd=('.scripts/build.sh')

          if [ "$PUSH" = "true" ]; then
            cmd+=('--push')
          fi

          if [ "$SIGN" = "true" ]; then
            cmd+=('--sign')
          fi

          for target in $TARGETS; do
            cmd+=("$target")
          done

          echo "INFO: Running ${cmd[@]}"
          "${cmd[@]}"
